#ifndef TEXTURE_H
#define TEXTURE_H

#include <GL/glew.h>
#include <GLFW/glfw3.h>

#include <stdlib.h>

#include "../common/log.h"

typedef struct {
    // the width of the texture
    int width;

    // the height of the texture
    int height;

    // the number of channels in the texture
    int channels;

    // the OpenGL ID that will be used when rendering the texture
    unsigned int id;
} Texture;

// Creates a new OpenGL texture from the file name provided. This can be bound
// and then used by the program when drawing textured objects. The textures
// generated by this library are always set to GL_NEAREST, so if you need
// something else, you may need to consider writing your own implementation of
// creating textures
Texture *texture_new(char*, GLuint);

// Creates an empty OpenGL texture with the width and height specified
Texture *texture_empty(int, int, GLuint);

// Gets the pixel size of the image (normalized) on the x axis
double texture_normal_pixel_u(Texture*);

// Gets the pixel size of the image (normalized) on the y axis
double texture_normal_pixel_v(Texture*);

// Frees the allocated Texture, also deletes the texture within OpenGL
void texture_free(Texture*);

#endif
